
package noumena.payment.mol.ws.heartbeat;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import noumena.payment.mol.MOLCharge;
import noumena.payment.mol.MOLParams;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "heartbeat", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://molv3.molsolutions.com/api/login/s_module/heartbeat.asmx?WSDL")
public class Heartbeat
    extends Service
{

    private final static URL HEARTBEAT_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(Heartbeat.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = Heartbeat.class.getResource(".");
            String wsdlurl = "";
            if (MOLCharge.isTestmode() == true)
            {
            	wsdlurl = MOLParams.HEARTBEAT_URL_TEST;
            }
            else
            {
            	wsdlurl = MOLParams.HEARTBEAT_URL_RELEASE;
            }
            url = new URL(baseUrl, wsdlurl + "?wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://molv3.molsolutions.com/api/login/s_module/heartbeat.asmx?WSDL', retrying as a local file");
            logger.warning(e.getMessage());
        }
        HEARTBEAT_WSDL_LOCATION = url;
    }

    public Heartbeat(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Heartbeat() {
        super(HEARTBEAT_WSDL_LOCATION, new QName("http://tempuri.org/", "heartbeat"));
    }

    /**
     * 
     * @return
     *     returns HeartbeatSoap
     */
    @WebEndpoint(name = "heartbeatSoap")
    public HeartbeatSoap getHeartbeatSoap() {
        return super.getPort(new QName("http://tempuri.org/", "heartbeatSoap"), HeartbeatSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HeartbeatSoap
     */
    @WebEndpoint(name = "heartbeatSoap")
    public HeartbeatSoap getHeartbeatSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "heartbeatSoap"), HeartbeatSoap.class, features);
    }

}
